{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","state","data","weather","componentDidMount","navigator","geolocation","getCurrentPosition","position","coord","lat","coords","latitude","lon","longitude","CurrentData","then","main","temp","feels_like","temp_min","temp_max","pressure","humidity","setState","toFarenheit","wind_speed","wind","speed","alert","render","className","this","React","Component"],"mappings":"uJAIMA,E,oBAEF,aAAe,IAAD,SACV,sBACKC,MAAQ,CACTC,KAAM,GACNC,QAAS,IAJH,E,kHASdC,kBAAA,WAAqB,IAAD,OACZ,gBAAiBC,UAEjBA,UAAUC,YAAYC,oBAAmB,SAAAC,GAErC,IAAIC,EAAQ,CACRC,IAAKF,EAASG,OAAOC,SACrBC,IAAKL,EAASG,OAAOG,WAGzBC,sBAAYN,EAAMC,IAAKD,EAAMI,KAAKG,MAAK,SAAAd,GAAS,IAAD,EAC0BA,EAAKe,KAAlEC,EADmC,EACnCA,KAAMC,EAD6B,EAC7BA,WAAYC,EADiB,EACjBA,SAAUC,EADO,EACPA,SAAUC,EADH,EACGA,SAAUC,EADb,EACaA,SAExD,EAAKC,SAAS,CACVtB,OACAgB,KAAMO,sBAAYP,GAClBC,WAAYM,sBAAYN,GACxBC,SAAUK,sBAAYL,GACtBC,SAAUI,sBAAYJ,GACtBC,WAAUC,WACVpB,QAASD,EAAKC,QAAQ,GACtBuB,WAAYxB,EAAKyB,KAAKC,cAQlCC,MAAM,kC,EAKdC,OAAA,WACI,OACI,kBAAC,IAAD,KAEI,yBAAKC,UAAU,oBACX,yBAAKA,UAAU,UACX,4BAAKC,KAAK/B,MAAMkB,WAAhB,KACA,0CAEJ,yBAAKY,UAAU,UACX,4BAAKC,KAAK/B,MAAMmB,SAAhB,KACA,+CAEJ,yBAAKW,UAAU,UACX,4BAAKC,KAAK/B,MAAMoB,SAAhB,KACA,gDAIR,6BACA,yBAAKU,UAAU,oBAEX,yBAAKA,UAAU,UACX,4BAAKC,KAAK/B,MAAMqB,SAAhB,QACA,wCAGJ,yBAAKS,UAAU,UACX,4BAAKC,KAAK/B,MAAMsB,SAAhB,KACA,wCAGJ,yBAAKQ,UAAU,UACX,4BAAKC,KAAK/B,MAAMyB,WAAhB,QACA,6C,GA/EAO,IAAMC,WA0FflC","file":"component---src-pages-index-js-f2da5d36b6997dc9f006.js","sourcesContent":["import React from 'react'\r\nimport Layout from '../components/layout'\r\nimport { CurrentData, toFarenheit } from '../API/weather'\r\n\r\nclass IndexPage extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            data: {},\r\n            weather: {},\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if ('geolocation' in navigator) {\r\n            //Set Current Weather Data to State\r\n            navigator.geolocation.getCurrentPosition(position => {\r\n                //Determin current latitude and longitude\r\n                let coord = {\r\n                    lat: position.coords.latitude,\r\n                    lon: position.coords.longitude\r\n                };\r\n\r\n                CurrentData(coord.lat, coord.lon).then(data => {\r\n                    const { temp, feels_like, temp_min, temp_max, pressure, humidity } = data.main\r\n                    //Set current weather data to state\r\n                    this.setState({\r\n                        data,\r\n                        temp: toFarenheit(temp),\r\n                        feels_like: toFarenheit(feels_like),\r\n                        temp_min: toFarenheit(temp_min),\r\n                        temp_max: toFarenheit(temp_max),\r\n                        pressure, humidity,\r\n                        weather: data.weather[0],\r\n                        wind_speed: data.wind.speed\r\n                    })\r\n\r\n                })\r\n\r\n            });\r\n\r\n        }else{\r\n            alert(\"Current location not found...\")\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n\r\n                <div className=\"row center-align\">\r\n                    <div className=\"col s4\">\r\n                        <h4>{this.state.feels_like}°</h4>\r\n                        <p>FEELS LIKE</p>\r\n                    </div>\r\n                    <div className=\"col s4\">\r\n                        <h4>{this.state.temp_min}°</h4>\r\n                        <p>MIN TEMPERATURE</p>\r\n                    </div>\r\n                    <div className=\"col s4\">\r\n                        <h4>{this.state.temp_max}°</h4>\r\n                        <p>MAX TEMPERATURE</p>\r\n                    </div>\r\n\r\n                </div>\r\n                <hr></hr>\r\n                <div className=\"row center-align\">\r\n\r\n                    <div className=\"col s4\">\r\n                        <h4>{this.state.pressure} hPa</h4>\r\n                        <p>PRESSURE</p>\r\n                    </div>\r\n\r\n                    <div className=\"col s4\">\r\n                        <h4>{this.state.humidity}%</h4>\r\n                        <p>HUMIDITY</p>\r\n                    </div>\r\n\r\n                    <div className=\"col s4\">\r\n                        <h4>{this.state.wind_speed} MPH</h4>\r\n                        <p>WIND SPEED</p>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </Layout>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default IndexPage\r\n"],"sourceRoot":""}