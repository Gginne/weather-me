{"version":3,"sources":["webpack:///./src/components/weathersearch.js","webpack:///./src/pages/search.js"],"names":["WeatherSearch","props","setIcon","Iconfig","weather","hours","hourFormat","className","temp","name","icon","color","size","animate","description","SearchPage","state","input","city","cityData","handleChange","bind","handleSubmit","e","this","setState","target","value","SearchWeather","then","data","Date","dt","timezone","getHours","sys","country","main","toFarenheit","console","log","catch","err","preventDefault","render","searchCard","onSubmit","type","onChange","placeholder","React","Component"],"mappings":"8LA2BeA,EAvBO,SAAAC,GAGlB,IAAIC,EAAU,IAAIC,IAAQF,EAAMG,QAASH,EAAMI,MAAO,KAElDC,EAAaL,EAAMI,OAAS,GAAQJ,EAAMI,MAAQ,GAArC,MAAkDJ,EAAMI,MAAxD,MAEjB,OACI,yBAAKE,UAAU,2BACX,4BAAKN,EAAMO,KAAX,KAAmBP,EAAMQ,MACzB,2BAAIH,GACJ,kBAAC,IAAD,CACII,KAAMR,EAAQQ,KACdC,MAAOT,EAAQS,MACfC,KAAMV,EAAQU,KACdC,QAASX,EAAQW,UAErB,4BAAKZ,EAAMG,SACX,2BAAIH,EAAMa,e,+HChBhBC,E,oBAEF,aAAe,IAAD,SACV,sBACKC,MAAQ,CACTC,MAAO,GACPC,KAAM,GACNC,SAAU,MAId,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,MACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,MAVV,E,kHAadD,aAAA,SAAaG,GACTC,KAAKC,SAAS,CAAER,MAAOM,EAAEG,OAAOC,S,EAIpCL,aAAA,SAAaC,GAAI,IAAD,OACZC,KAAKC,SAAS,CAAEP,KAAMM,KAAKR,MAAMC,QACjCW,wBAAcJ,KAAKR,MAAMC,OAAOY,MAAK,SAAAC,GACjC,IACMzB,EADO,IAAI0B,KAAiC,KAA3BD,EAAKE,GAAKF,EAAKG,WACnBC,WAEnB,EAAKT,SAAS,CACVN,SAAU,CACNV,KAASqB,EAAKrB,KAAV,KAAmBqB,EAAKK,IAAIC,QAChChC,QAAS0B,EAAK1B,QAAQ,GAAGiC,KACzBvB,YAAagB,EAAK1B,QAAQ,GAAGU,YAC7BT,QACAG,KAAM8B,sBAAYR,EAAKO,KAAK7B,SAKpC+B,QAAQC,IAAIV,MACbW,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAR,sBAAkCE,MAElDnB,EAAEoB,kB,EAGNC,OAAA,WAAU,IAAD,OAEDC,EAAarB,KAAKR,MAAMG,SAExB,kBAAC,EAAD,CAAeV,KAAMe,KAAKR,MAAMG,SAASV,KACrCL,QAASoB,KAAKR,MAAMG,SAASf,QAC7BU,YAAaU,KAAKR,MAAMG,SAASL,YACjCT,MAAOmB,KAAKR,MAAMG,SAASd,MAC3BG,KAAMgB,KAAKR,MAAMG,SAASX,OAAW,GAE7C,OACI,kBAAC,IAAD,KACI,0BAAMsC,SAAU,SAAAvB,GAAC,OAAI,EAAKD,aAAaC,KACnC,yBAAKhB,UAAU,OACX,yBAAKA,UAAU,sBACX,2BAAOwC,KAAK,OAAOC,SAAU,SAAAzB,GAAC,OAAI,EAAKH,aAAaG,IAChDI,MAAOH,KAAKR,MAAMC,MAClBgC,YAAY,kBAGpB,yBAAK1C,UAAU,sBACX,4BAAQA,UAAU,sBAAlB,aAOXsC,I,GAvEQK,IAAMC,WA+EhBpC","file":"component---src-pages-search-js-bb3c9dd14c623f9a2ec4.js","sourcesContent":["import React from 'react'\r\nimport ReactAnimatedWeather from 'react-animated-weather';\r\nimport Iconfig from './iconfig'\r\n\r\nconst WeatherSearch = props => {\r\n\r\n    //Set Icon Params\r\n    let setIcon = new Iconfig(props.weather, props.hours, 100)\r\n    //Format Time in AM/PM\r\n    let hourFormat = props.hours >= 12 ? `${props.hours - 12} PM` : `${props.hours} AM`\r\n\r\n    return (\r\n        <div className=\"card-panel center-align\">\r\n            <h3>{props.temp}Â° {props.name}</h3>\r\n            <p>{hourFormat}</p>\r\n            <ReactAnimatedWeather\r\n                icon={setIcon.icon}\r\n                color={setIcon.color}\r\n                size={setIcon.size}\r\n                animate={setIcon.animate}\r\n            />\r\n            <h5>{props.weather}</h5>\r\n            <p>{props.description}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherSearch\r\n","import React from 'react'\r\nimport Layout from '../components/layout'\r\nimport { SearchWeather, toFarenheit } from '../API/weather'\r\nimport WeatherSearch from '../components/weathersearch'\r\n\r\n\r\nclass SearchPage extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            input: '',\r\n            city: '',\r\n            cityData: null,\r\n\r\n\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ input: e.target.value })\r\n\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        this.setState({ city: this.state.input })\r\n        SearchWeather(this.state.input).then(data => {\r\n            const date = new Date((data.dt - data.timezone) * 1000)\r\n            const hours = date.getHours()\r\n            //Set Searched weather data to state\r\n            this.setState({\r\n                cityData: {\r\n                    name: `${data.name}, ${data.sys.country}`,\r\n                    weather: data.weather[0].main,\r\n                    description: data.weather[0].description,\r\n                    hours,\r\n                    temp: toFarenheit(data.main.temp)\r\n\r\n                }\r\n            })\r\n\r\n            console.log(data)\r\n        }).catch(err => console.log(`Country not found: ${err}`))\r\n\r\n        e.preventDefault()\r\n    }\r\n\r\n    render() {\r\n\r\n        let searchCard = this.state.cityData ?\r\n\r\n            <WeatherSearch name={this.state.cityData.name}\r\n                weather={this.state.cityData.weather}\r\n                description={this.state.cityData.description}\r\n                hours={this.state.cityData.hours}\r\n                temp={this.state.cityData.temp} /> : ''\r\n\r\n        return (\r\n            <Layout>\r\n                <form onSubmit={e => this.handleSubmit(e)}>\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field col s9\">\r\n                            <input type=\"text\" onChange={e => this.handleChange(e)}\r\n                                value={this.state.input}\r\n                                placeholder=\"Enter a city\">\r\n                            </input>\r\n                        </div>\r\n                        <div className=\"input-field col s3\">\r\n                            <button className=\"btn green accent-4\">Search</button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </form>\r\n\r\n                {searchCard}\r\n\r\n            </Layout>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SearchPage\r\n"],"sourceRoot":""}